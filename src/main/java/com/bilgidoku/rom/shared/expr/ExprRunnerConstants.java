/* Generated By:JavaCC: Do not edit this line. ExprRunnerConstants.java */
package com.bilgidoku.rom.shared.expr;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExprRunnerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NORMAL_DEFAULT = 1;
  /** RegularExpression Id. */
  int ESCAPED_DEFAULT = 2;
  /** RegularExpression Id. */
  int START_EVAL_DYNAMIC = 3;
  /** RegularExpression Id. */
  int START_EVAL_DEFERRED = 4;
  /** RegularExpression Id. */
  int NORMAL_SSTRING = 5;
  /** RegularExpression Id. */
  int ESCAPED_SSTRING = 6;
  /** RegularExpression Id. */
  int END_SSTRING = 7;
  /** RegularExpression Id. */
  int NORMAL_DSTRING = 8;
  /** RegularExpression Id. */
  int ESCAPED_DSTRING = 9;
  /** RegularExpression Id. */
  int END_DSTRING = 10;
  /** RegularExpression Id. */
  int INTEGER = 15;
  /** RegularExpression Id. */
  int BOOLEAN = 16;
  /** RegularExpression Id. */
  int FLOAT = 17;
  /** RegularExpression Id. */
  int EXPONENT = 18;
  /** RegularExpression Id. */
  int START_SSTRING = 19;
  /** RegularExpression Id. */
  int START_DSTRING = 20;
  /** RegularExpression Id. */
  int GT = 21;
  /** RegularExpression Id. */
  int GE = 22;
  /** RegularExpression Id. */
  int LT = 23;
  /** RegularExpression Id. */
  int LE = 24;
  /** RegularExpression Id. */
  int EQ = 25;
  /** RegularExpression Id. */
  int NE = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int DIV = 30;
  /** RegularExpression Id. */
  int MOD = 31;
  /** RegularExpression Id. */
  int MUL = 32;
  /** RegularExpression Id. */
  int ADD = 33;
  /** RegularExpression Id. */
  int SUB = 34;
  /** RegularExpression Id. */
  int COLON = 35;
  /** RegularExpression Id. */
  int QUESTION = 36;
  /** RegularExpression Id. */
  int LPAREN = 37;
  /** RegularExpression Id. */
  int RPAREN = 38;
  /** RegularExpression Id. */
  int LBRACK = 39;
  /** RegularExpression Id. */
  int RBRACK = 40;
  /** RegularExpression Id. */
  int DOT = 41;
  /** RegularExpression Id. */
  int COMMA = 42;
  /** RegularExpression Id. */
  int EMPTY = 43;
  /** RegularExpression Id. */
  int INT = 44;
  /** RegularExpression Id. */
  int LEN = 45;
  /** RegularExpression Id. */
  int TRNS = 46;
  /** RegularExpression Id. */
  int URLENCODE = 47;
  /** RegularExpression Id. */
  int UPPERCASE = 48;
  /** RegularExpression Id. */
  int LOWERCASE = 49;
  /** RegularExpression Id. */
  int CAPITALIZE = 50;
  /** RegularExpression Id. */
  int MONEY = 51;
  /** RegularExpression Id. */
  int NULL = 52;
  /** RegularExpression Id. */
  int IDENTIFIER = 53;
  /** RegularExpression Id. */
  int END_EVAL = 54;
  /** RegularExpression Id. */
  int LETTER = 55;
  /** RegularExpression Id. */
  int PART_LETTER = 56;
  /** RegularExpression Id. */
  int ILLEGAL_CHARACTER = 57;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int SSTRING = 1;
  /** Lexical state. */
  int DSTRING = 2;
  /** Lexical state. */
  int EVAL = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<NORMAL_DEFAULT>",
    "<ESCAPED_DEFAULT>",
    "\"${\"",
    "\"#{\"",
    "<NORMAL_SSTRING>",
    "<ESCAPED_SSTRING>",
    "\"\\\'\"",
    "<NORMAL_DSTRING>",
    "<ESCAPED_DSTRING>",
    "\"\\\"\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<INTEGER>",
    "<BOOLEAN>",
    "<FLOAT>",
    "<EXPONENT>",
    "\"\\\'\"",
    "\"\\\"\"",
    "<GT>",
    "<GE>",
    "<LT>",
    "<LE>",
    "<EQ>",
    "<NE>",
    "<OR>",
    "<AND>",
    "<NOT>",
    "<DIV>",
    "<MOD>",
    "\"*\"",
    "\"+\"",
    "\"-\"",
    "\":\"",
    "\"?\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\"empty\"",
    "\"int\"",
    "\"len\"",
    "\"trns\"",
    "\"urlencode\"",
    "\"uppercase\"",
    "\"lowercase\"",
    "\"capitalize\"",
    "\"money\"",
    "\"null\"",
    "<IDENTIFIER>",
    "\"}\"",
    "<LETTER>",
    "<PART_LETTER>",
    "<ILLEGAL_CHARACTER>",
  };

}
